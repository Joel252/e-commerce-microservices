// <auto-generated />
using Microservices.Services.ProductAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Microservices.Services.ProductAPI.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    [Migration("20250608024737_initMigration")]
    partial class initMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microservices.Services.ProductAPI.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Category = "Periféricos",
                            Description = "Teclado mecánico con retroiluminación RGB y switches azules para una experiencia de escritura táctil.",
                            ImageUrl = "https://example.com/images/teclado-rgb.jpg",
                            Name = "Teclado Mecánico RGB",
                            Price = 89.99m,
                            Stock = 150
                        },
                        new
                        {
                            ProductId = 2,
                            Category = "Muebles",
                            Description = "Silla gamer con diseño ergonómico, reposabrazos ajustables y soporte lumbar.",
                            ImageUrl = "https://example.com/images/silla-gamer.jpg",
                            Name = "Silla Gamer Ergonomica",
                            Price = 249.50m,
                            Stock = 75
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
